<layout xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <import type="cat.udl.tidic.amd.trivial.models.Category"/>
        <import type="android.view.View"/>
        <variable
            name="question"
            type="cat.udl.tidic.amd.trivial.models.Question" />
        <variable
            name="questionViewModel"
            type="cat.udl.tidic.amd.trivial.usecases.question.QuestionViewModel" />
    </data>


    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:foregroundGravity="center_vertical|center_horizontal"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="1.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.174"
        tools:context=".usecases.question.QuestionFragment"
        android:visibility="@{question != null ? View.VISIBLE : View.INVISIBLE}">

        <TextView
            android:id="@+id/category"
            android:layout_width="24dp"
            android:layout_height="0dp"
            android:background="@{question.category == Category.movies ? @color/trivial_orange : questionViewModel.isQuestionLoaded().category == Category.science ? @color/trivial_green : questionViewModel.isQuestionLoaded().category == Category.games ? @color/trivial_pig : @color/trivial_blue}"
            android:gravity="center"
            android:text='@{question.category.toString().substring(0,1)}'
            android:textColor="@color/white"
            app:layout_constraintBottom_toBottomOf="@+id/answer4Bt"
            app:layout_constraintEnd_toStartOf="@+id/answer4Bt"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="@+id/pickAnswerTV"
            app:layout_constraintVertical_bias="1.0" />

        <TextView
            android:id="@+id/questionTV"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginStart="12dp"
            android:layout_marginTop="12dp"
            android:layout_marginEnd="12dp"
            android:fontFamily="sans-serif-black"
            android:text="@{question.question}"
            android:textAlignment="center"
            android:textSize="12sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/pickAnswerTV"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="12dp"
            android:background="#C7EFC9"
            android:text="*** Pick the answer ***"
            android:textAlignment="center"
            android:textColor="#00838F"
            android:textSize="24sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/questionTV" />

        <Button
            android:id="@+id/answer1Bt"
            android:layout_width="297dp"
            android:layout_height="82dp"
            android:layout_marginTop="24dp"
            android:onClick="@{() -> questionViewModel.onClickedAt(questionViewModel.isQuestionLoaded().answers.get(0))}"
            android:text="@{question.answers.get(0).answer}"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/pickAnswerTV"
            tools:ignore="SpeakableTextPresentCheck" />

        <Button
            android:id="@+id/answer2Bt"
            android:layout_width="297dp"
            android:layout_height="82dp"
            android:layout_marginTop="8dp"
            android:onClick="@{() -> questionViewModel.onClickedAt(questionViewModel.isQuestionLoaded().answers.get(1))}"
            android:text="@{question.answers.get(1).answer}"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/answer1Bt"
            tools:ignore="SpeakableTextPresentCheck" />

        <Button
            android:id="@+id/answer3Bt"
            android:layout_width="297dp"
            android:layout_height="82dp"
            android:layout_marginTop="8dp"
            android:visibility="@{question.answers.size() > 2  ? View.VISIBLE : View.INVISIBLE}"
            android:onClick="@{() -> question.answers.size() > 2 ? questionViewModel.onClickedAt(questionViewModel.isQuestionLoaded().answers.get(2)) : null}"
            android:text='@{question.answers.size() > 2  ? question.answers.get(2).answer : ""}'
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/answer2Bt"
            tools:ignore="SpeakableTextPresentCheck" />

        <Button
            android:id="@+id/answer4Bt"
            android:layout_width="297dp"
            android:layout_height="82dp"
            android:layout_marginTop="8dp"
            android:visibility="@{question.answers.size() > 2  ? View.VISIBLE : View.INVISIBLE}"
            android:onClick="@{() -> question.answers.size() > 2  ? questionViewModel.onClickedAt(questionViewModel.isQuestionLoaded().answers.get(3)) : null}"
            android:text='@{question.answers.size() > 2 ? question.answers.get(3).answer : ""}'
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/answer3Bt"
            tools:ignore="SpeakableTextPresentCheck,SpeakableTextPresentCheck" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>